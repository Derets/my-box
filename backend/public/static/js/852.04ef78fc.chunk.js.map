{"version":3,"file":"static/js/852.04ef78fc.chunk.js","mappings":"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","sources":["webpack://my-box/./src/UI/ErrorModal.module.css?11ad","UI/ErrorModal.js","UI/Modal.js","webpack://my-box/./src/UI/SuccessModal.module.css?f2d1","UI/SuccessModal.js","webpack://my-box/./src/components/User/UserAuthentication.module.css?41a4","UI/CentralModal.js","webpack://my-box/./src/UI/PasswordReset.module.css?cf7f","UI/PasswordReset.js","UI/ReconfirmEmail.js","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js","components/User/UserAuthentication.js","pages/Authentication.js","webpack://my-box/./src/UI/Modal.module.css?c7c1"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ModalAuthError\":\"ErrorModal_ModalAuthError__NoA5V\",\"modalBTN\":\"ErrorModal_modalBTN__kzYEi\"};","import React, { useContext } from \"react\";\r\nimport { LanguageContext } from \"../context/LanguageContext\";\r\nimport classes from \"./ErrorModal.module.css\";\r\n\r\nconst ErrorModel = (props) => {\r\n  const { language } = useContext(LanguageContext);\r\n  let isEnglish = language === \"en\";\r\n  return (\r\n    <div className={classes.ModalAuthError}>\r\n      <h1>{isEnglish ? \"An error accured!\" : \"Упс... Відбулася помилка!\"}</h1>\r\n      <p>{props.error}</p>\r\n      <div className={classes.modalBTN} id=\"modalBtn\" onClick={props.onClick}>\r\n        OK\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorModel;\r\n","import React, { useEffect } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div onClick={props?.onClick} className={classes.backdrop}></div>;\r\n};\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  useEffect(() => {\r\n    const modalBtn = document.getElementById(\"modalBtn\");\r\n    modalBtn?.focus();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props?.onClick} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ModalAuthError\":\"SuccessModal_ModalAuthError__1ws38\",\"modalBTN\":\"SuccessModal_modalBTN__40Yj6\"};","import React, { useContext } from \"react\";\r\nimport { LanguageContext } from \"../context/LanguageContext\";\r\nimport classes from \"./SuccessModal.module.css\";\r\n\r\nconst SuccessModel = (props) => {\r\n  const { language } = useContext(LanguageContext);\r\n  let isEnglish = language === \"en\";\r\n  return (\r\n    <div className={classes.ModalAuthError}>\r\n      <h1>{isEnglish ? \"Success!\" : \"Все добре!\"}</h1>\r\n      <p>{props.text}</p>\r\n      <div className={classes.modalBTN} id=\"modalBtn\" onClick={props.onClick}>\r\n        OK\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessModel;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"UserAuthentication_link__wEeAX\",\"AuthenticationSection\":\"UserAuthentication_AuthenticationSection__xmQrT\",\"container\":\"UserAuthentication_container__exxG8\",\"section\":\"UserAuthentication_section__d7OAI\",\"fullHeight\":\"UserAuthentication_fullHeight__T5FfO\",\"checkbox\":\"UserAuthentication_checkbox__KhoET\",\"mb\":\"UserAuthentication_mb__6YeCB\",\"card-3d-wrap\":\"UserAuthentication_card-3d-wrap__snI+u\",\"card-3d-wrapper\":\"UserAuthentication_card-3d-wrapper__5cWrI\",\"card-front\":\"UserAuthentication_card-front__onqhj\",\"card-back\":\"UserAuthentication_card-back__3ECWL\",\"center-wrap\":\"UserAuthentication_center-wrap__ISiWB\",\"form-group\":\"UserAuthentication_form-group__RX6Ly\",\"form-style\":\"UserAuthentication_form-style__AaP6n\",\"input-icon\":\"UserAuthentication_input-icon__X8n31\",\"btn\":\"UserAuthentication_btn__8ZK+n\",\"Success\":\"UserAuthentication_Success__qBFeE\",\"GoogleLoginIcon\":\"UserAuthentication_GoogleLoginIcon__eoLMK\"};","import React, { useEffect } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div onClick={props?.onClick} className={classes.backdrop}></div>;\r\n};\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.centralModal}>\r\n      <div>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst CentralModal = (props) => {\r\n  useEffect(() => {\r\n    const modalBtn = document.getElementById(\"modalBtn\");\r\n    modalBtn?.focus();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props?.onClick} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CentralModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ModalAuthError\":\"PasswordReset_ModalAuthError__OlvC6\",\"EmailInput\":\"PasswordReset_EmailInput__d7g+M\",\"modalButtons\":\"PasswordReset_modalButtons__OjDuv\",\"modalBTNUnconfirm\":\"PasswordReset_modalBTNUnconfirm__vWAQi\",\"modalBTNConfirm\":\"PasswordReset_modalBTNConfirm__phLfY\"};","import React, { useContext, useState } from \"react\";\r\nimport { LanguageContext } from \"../context/LanguageContext\";\r\nimport classes from \"./PasswordReset.module.css\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst PasswordReset = (props) => {\r\n  const [email, setEmail] = useState(undefined);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const { language } = useContext(LanguageContext);\r\n  let isEnglish = language === \"en\";\r\n\r\n  const resetHandler = async (email) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      setIsSuccess(false);\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}resetpassword`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: email,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      setIsLoading(false);\r\n      setIsSuccess(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message || \"Something went wrong, please try again  \");\r\n      setIsLoading(false);\r\n      setIsSuccess(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ModalAuthError}>\r\n      <h1>{isEnglish ? \"Enter email: \" : \"Введіть пошту: \"}</h1>\r\n\r\n      <input\r\n        className={classes.EmailInput}\r\n        type=\"text\"\r\n        id=\"email\"\r\n        required\r\n        value={email}\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n      />\r\n      {isLoading && <Loader />}\r\n      {error && <p>{error}</p>}\r\n      {isSuccess && (\r\n        <p>\r\n          {isEnglish\r\n            ? \"Password sent successfully, please check your email address.\"\r\n            : \"Пароль був відісланий на пошту, будь ласка переглятне е-мейл.\"}\r\n        </p>\r\n      )}\r\n      <div className={classes.modalButtons}>\r\n        <div\r\n          className={classes.modalBTNUnconfirm}\r\n          id=\"modalBtn\"\r\n          onClick={props.onExit}\r\n        >\r\n          {isEnglish ? \"Not now\" : \"Не зараз\"}\r\n        </div>\r\n        <div\r\n          className={classes.modalBTNConfirm}\r\n          id=\"modalBtn\"\r\n          onClick={() => {\r\n            resetHandler(email);\r\n          }}\r\n        >\r\n          {isEnglish ? \"Send\" : \"Відправити\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { LanguageContext } from \"../context/LanguageContext\";\r\nimport classes from \"./PasswordReset.module.css\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst ReconfirmEmail = (props) => {\r\n  const [email, setEmail] = useState(undefined);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const { language } = useContext(LanguageContext);\r\n  let isEnglish = language === \"en\";\r\n\r\n  const resetHandler = async (email) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      setIsSuccess(false);\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}reconfirmemail`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: email,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      setIsLoading(false);\r\n      setIsSuccess(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message || \"Something went wrong, please try again  \");\r\n      setIsLoading(false);\r\n      setIsSuccess(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ModalAuthError}>\r\n      <h1>{isEnglish ? \"Enter email: \" : \"Введіть пошту: \"}</h1>\r\n\r\n      <input\r\n        className={classes.EmailInput}\r\n        type=\"text\"\r\n        id=\"email\"\r\n        required\r\n        value={email}\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n      />\r\n      {isLoading && <Loader />}\r\n      {error && <p>{error}</p>}\r\n      {isSuccess && (\r\n        <p>\r\n          {isEnglish\r\n            ? \"Mail sent successfully, please check your email address.\"\r\n            : \"Письмо відіслано на пошту, будь ласка переглятне е-мейл.\"}\r\n        </p>\r\n      )}\r\n      <div className={classes.modalButtons}>\r\n        <div\r\n          className={classes.modalBTNUnconfirm}\r\n          id=\"modalBtn\"\r\n          onClick={props.onExit}\r\n        >\r\n          {isEnglish ? \"Not now\" : \"Не зараз\"}\r\n        </div>\r\n        <div\r\n          className={classes.modalBTNConfirm}\r\n          id=\"modalBtn\"\r\n          onClick={() => {\r\n            resetHandler(email);\r\n          }}\r\n        >\r\n          {isEnglish ? \"Send\" : \"Відправити\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReconfirmEmail;\r\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","import React, { useContext, useState } from \"react\";\r\nimport classes from \"./UserAuthentication.module.css\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport Loader from \"../../UI/Loader\";\r\nimport Modal from \"../../UI/Modal\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\nimport ErrorModel from \"../../UI/ErrorModal\";\r\nimport SuccessModel from \"../../UI/SuccessModal\";\r\nimport CentralModal from \"../../UI/CentralModal\";\r\nimport PasswordReset from \"../../UI/PasswordReset\";\r\nimport ReconfirmEmail from \"../../UI/ReconfirmEmail\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst UserAuthentication = () => {\r\n  const { login, isLoggedIn } = useContext(AuthContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const [isReseting, setIsReseting] = useState(false);\r\n  const [isReconfirmation, setIsReconfirmation] = useState(false);\r\n\r\n  const { language } = useContext(LanguageContext);\r\n  let isEnglish = language === \"en\";\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: e.target.loginEmailInput.value,\r\n          password: e.target.loginPasswordInput.value,\r\n        }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      if (responseData.userId) {\r\n        localStorage.setItem(\"user_id\", responseData.userId);\r\n      } else {\r\n        throw new Error(\"There is no userId\");\r\n      }\r\n      setIsLoading(false);\r\n      login(responseData.userId, responseData.token, responseData.role);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message || \"Something went wrong, please try again  \");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const signupHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      setIsSuccess(false);\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}signup`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          name: e.target.signupUsername.value,\r\n          email: e.target.signupEmail.value,\r\n          password: e.target.signupPassword.value,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n\r\n      setIsLoading(false);\r\n      setIsSuccess(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message || \"Something went wrong, please try again  \");\r\n      setIsLoading(false);\r\n      setIsSuccess(false);\r\n    }\r\n  };\r\n\r\n  const GoogleSignupHandler = async (userObject) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}google/signup`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            name: userObject.name,\r\n            email: userObject.email,\r\n            image: userObject.picture,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      if (responseData.userId) {\r\n        localStorage.setItem(\"user_id\", responseData.userId);\r\n      } else {\r\n        throw new Error(\"There is no userId\");\r\n      }\r\n      login(responseData.userId, responseData.token);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message || \"Something went wrong, please try again  \");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const GoogleLoginHandler = async (userObject) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}google/login`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: userObject.email,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      if (responseData.userId) {\r\n        localStorage.setItem(\"user_id\", responseData.userId);\r\n      } else {\r\n        throw new Error(\"There is no userId\");\r\n      }\r\n      login(responseData.userId, responseData.token, responseData.role);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message || \"Something went wrong, please try again  \");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isReseting && (\r\n        <CentralModal\r\n          onClick={() => {\r\n            setIsReseting(false);\r\n          }}\r\n        >\r\n          <PasswordReset\r\n            onExit={() => {\r\n              setIsReseting(false);\r\n            }}\r\n          />\r\n        </CentralModal>\r\n      )}\r\n      {isReconfirmation && (\r\n        <CentralModal\r\n          onClick={() => {\r\n            setIsReconfirmation(false);\r\n          }}\r\n        >\r\n          <ReconfirmEmail\r\n            onExit={() => {\r\n              setIsReconfirmation(false);\r\n            }}\r\n          />\r\n        </CentralModal>\r\n      )}\r\n      {isSuccess && (\r\n        <Modal\r\n          onClick={() => {\r\n            setIsSuccess(false);\r\n          }}\r\n        >\r\n          <SuccessModel\r\n            text={`${\r\n              isEnglish\r\n                ? \"A confirmation link has been sent to your email, be sure to check your spam!\"\r\n                : \"Посилання для підтвердження надіслано на вашу електронну пошту, обов’язково перевірте спам!\"\r\n            }`}\r\n            onClick={() => {\r\n              setIsSuccess(false);\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n      {error && (\r\n        <Modal\r\n          onClick={() => {\r\n            setError(null);\r\n          }}\r\n        >\r\n          <ErrorModel\r\n            error={error}\r\n            onClick={() => {\r\n              setError(null);\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <div className={classes.AuthenticationSection}>\r\n        <div className={classes.container}>\r\n          <div className={`${classes.row} ${classes.fullHeight}`}>\r\n            <div\r\n              className={`${classes.col} ${classes[\"text-center\"]} ${classes[\"align-self-center\"]} ${classes.py}`}\r\n            >\r\n              <div\r\n                className={`${classes.section} ${classes.pb} ${classes.pt} ${classes[\"pt-sm-2\"]} ${classes[\"text-center\"]}`}\r\n              >\r\n                <h6 className={`${classes.mb} ${classes.pb}`}>\r\n                  <span>{isEnglish ? \"Log In\" : \"Вхід\"}</span>\r\n                  <span>{isEnglish ? \"Sign Up\" : \"Зареєстрація\"}</span>\r\n                </h6>\r\n                <input\r\n                  className={classes.checkbox}\r\n                  type=\"checkbox\"\r\n                  id=\"reg-log\"\r\n                  name=\"reg-log\"\r\n                />\r\n                <label htmlFor=\"reg-log\"></label>\r\n                <div className={classes[\"card-3d-wrap\"]}>\r\n                  <div className={classes[\"card-3d-wrapper\"]}>\r\n                    <div className={classes[\"card-front\"]}>\r\n                      <div className={classes[\"center-wrap\"]}>\r\n                        <form\r\n                          onSubmit={loginHandler}\r\n                          className={`${classes.section} ${classes[\"text-center\"]}`}\r\n                        >\r\n                          <h4 className={`${classes.mb} ${classes.pb}`}>\r\n                            {isEnglish ? \"Log In\" : \"Вхід\"}\r\n                          </h4>\r\n                          <div className={classes[\"form-group\"]}>\r\n                            <input\r\n                              id=\"loginEmailInput\"\r\n                              type=\"email\"\r\n                              className={classes[\"form-style\"]}\r\n                              placeholder={isEnglish ? \"Email\" : \"Пошта\"}\r\n                            />\r\n                            <i\r\n                              className={`${classes[\"input-icon\"]} ${classes.uil} ${classes[\"uil-at\"]}`}\r\n                            ></i>\r\n                          </div>\r\n                          <div\r\n                            className={`${classes[\"form-group\"]} ${classes.mt2}`}\r\n                          >\r\n                            <input\r\n                              id=\"loginPasswordInput\"\r\n                              type=\"password\"\r\n                              className={classes[\"form-style\"]}\r\n                              placeholder={isEnglish ? \"Password\" : \"Пароль\"}\r\n                            />\r\n                            <i\r\n                              className={`${classes[\"input-icon\"]} ${classes.uil} ${classes[\"uil-lock-alt\"]}`}\r\n                            ></i>\r\n                          </div>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className={`${classes.btn} ${\r\n                              !isLoading && !error && isLoggedIn\r\n                                ? classes.Success\r\n                                : null\r\n                            }`}\r\n                            disabled={!isLoading && !error && isLoggedIn}\r\n                          >\r\n                            {isLoading && <Loader />}\r\n                            {!isLoading &&\r\n                              !error &&\r\n                              !isLoggedIn &&\r\n                              isEnglish &&\r\n                              \"Login\"}\r\n                            {!isLoading &&\r\n                              !error &&\r\n                              !isLoggedIn &&\r\n                              !isEnglish &&\r\n                              \"Увійти\"}\r\n                            {!isLoading &&\r\n                              !error &&\r\n                              isLoggedIn &&\r\n                              isEnglish &&\r\n                              \"Already logged in\"}\r\n                            {!isLoading &&\r\n                              !error &&\r\n                              isLoggedIn &&\r\n                              !isEnglish &&\r\n                              \"Ви вже увійшли\"}\r\n                            {error && isEnglish && \"Try again\"}\r\n                            {error && !isEnglish && \"Спробуйте знову\"}\r\n                          </button>\r\n                          <p\r\n                            className={`${classes.mb} ${classes.mt4} ${classes[\"text-center\"]}`}\r\n                          >\r\n                            <div className={classes.GoogleLoginIcon}>\r\n                              <GoogleLogin\r\n                                // type={\"icon\"}\r\n                                className={classes.GoogleLoginIcon}\r\n                                theme={\"filled_blue\"}\r\n                                size=\"large\"\r\n                                text=\"signup_with\"\r\n                                onSuccess={(credentialResponse) => {\r\n                                  GoogleLoginHandler(\r\n                                    jwt_decode(credentialResponse.credential)\r\n                                  );\r\n                                  console.log(\r\n                                    jwt_decode(credentialResponse.credential)\r\n                                  );\r\n                                }}\r\n                                onError={() => {\r\n                                  console.log(\"Login Failed\");\r\n                                }}\r\n                              />\r\n                            </div>\r\n                            <button\r\n                              className={classes.link}\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                setIsReseting(true);\r\n                              }}\r\n                            >\r\n                              {isEnglish\r\n                                ? \"Forgot your password?\"\r\n                                : \"Забули пароль?\"}\r\n                            </button>\r\n                          </p>\r\n                          <p>\r\n                            <button\r\n                              className={classes.link}\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                setIsReconfirmation(true);\r\n                              }}\r\n                            >\r\n                              {isEnglish\r\n                                ? \"Reconfirm email\"\r\n                                : \"Перепідтвердити пошту\"}\r\n                            </button>\r\n                          </p>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* BACKCARD */}\r\n                    <div className={classes[\"card-back\"]}>\r\n                      <div className={classes[\"center-wrap\"]}>\r\n                        <form\r\n                          onSubmit={signupHandler}\r\n                          className={`${classes.section} ${classes[\"text-center\"]}`}\r\n                        >\r\n                          <h4 className={`${classes.mb3} ${classes.pb3}`}>\r\n                            {isEnglish ? \"Sign Up\" : \"Зареєстрація\"}\r\n                          </h4>\r\n                          <div className={classes[\"form-group\"]}>\r\n                            <input\r\n                              id=\"signupUsername\"\r\n                              type=\"text\"\r\n                              className={classes[\"form-style\"]}\r\n                              placeholder={\r\n                                isEnglish ? \"Full Name\" : \"Повне ім`я\"\r\n                              }\r\n                            />\r\n                            <i\r\n                              className={`${classes[\"input-icon\"]} ${classes.uil} ${classes[\"uil-user\"]}`}\r\n                            ></i>\r\n                          </div>\r\n                          <div\r\n                            className={`${classes[\"form-group\"]} ${classes.mt2}`}\r\n                          >\r\n                            <input\r\n                              id=\"signupEmail\"\r\n                              type=\"email\"\r\n                              className={classes[\"form-style\"]}\r\n                              placeholder={isEnglish ? \"Email\" : \"Пошта\"}\r\n                            />\r\n                            <i\r\n                              className={`${classes[\"input-icon\"]} ${classes.uil} ${classes[\"uil-at\"]}`}\r\n                            ></i>\r\n                          </div>\r\n                          <div\r\n                            className={`${classes[\"form-group\"]} ${classes.mt2}`}\r\n                          >\r\n                            <input\r\n                              id=\"signupPassword\"\r\n                              type=\"password\"\r\n                              className={classes[\"form-style\"]}\r\n                              placeholder={isEnglish ? \"Password\" : \"Пароль\"}\r\n                            />\r\n                            <i\r\n                              className={`${classes[\"input-icon\"]} ${classes.uil} ${classes[\"uil-lock-alt\"]}`}\r\n                            ></i>\r\n                          </div>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className={classes.btn}\r\n                            disabled={!isLoading && !error && isLoggedIn}\r\n                          >\r\n                            {isLoading && <Loader />}\r\n                            {!isLoading &&\r\n                              !error &&\r\n                              !isLoggedIn &&\r\n                              isEnglish &&\r\n                              \"Register\"}\r\n                            {!isLoading &&\r\n                              !error &&\r\n                              !isLoggedIn &&\r\n                              !isEnglish &&\r\n                              \"Зареєструватися\"}\r\n                            {!isLoading &&\r\n                              !error &&\r\n                              isLoggedIn &&\r\n                              isEnglish &&\r\n                              \"Already logged in\"}\r\n                            {!isLoading &&\r\n                              !error &&\r\n                              isLoggedIn &&\r\n                              !isEnglish &&\r\n                              \"Ви вже увійшли\"}\r\n                            {error && isEnglish && \"Try again\"}\r\n                            {error && !isEnglish && \"Спробуйте знову\"}\r\n                          </button>\r\n                          <div className={classes.GoogleLoginIcon}>\r\n                            <GoogleLogin\r\n                              theme={\"filled_blue\"}\r\n                              size=\"large\"\r\n                              text=\"signup_with\"\r\n                              onSuccess={(credentialResponse) => {\r\n                                GoogleSignupHandler(\r\n                                  jwt_decode(credentialResponse.credential)\r\n                                );\r\n                                console.log(\r\n                                  jwt_decode(credentialResponse.credential)\r\n                                );\r\n                              }}\r\n                              onError={() => {\r\n                                console.log(\"Login Failed\");\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserAuthentication;\r\n","import React from \"react\";\r\nimport UserAuthentication from \"../components/User/UserAuthentication\";\r\n\r\nconst Authentication = () => {\r\n  return <UserAuthentication />;\r\n};\r\n\r\nexport default Authentication;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__xrrQb\",\"modal\":\"Modal_modal__xYw7Q\",\"slide-down\":\"Modal_slide-down__2nDfw\",\"modalBTN\":\"Modal_modalBTN__khJ4T\",\"centralModal\":\"Modal_centralModal__gKzgM\",\"float\":\"Modal_float__7EeUJ\"};"],"names":["props","isEnglish","useContext","LanguageContext","language","_jsxs","className","classes","children","_jsx","error","id","onClick","Backdrop","backdrop","ModalOverlay","modal","portalElement","document","getElementById","useEffect","modalBtn","focus","_Fragment","ReactDOM","text","centralModal","_useState","useState","undefined","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","_useState7","_useState8","isSuccess","setIsSuccess","resetHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","responseData","wrap","_context","prev","next","fetch","concat","process","method","headers","body","JSON","stringify","sent","json","ok","Error","message","t0","console","log","stop","_x","apply","arguments","type","required","value","onChange","e","target","Loader","onExit","this","prototype","name","r","window","atob","bind","t","String","replace","length","n","o","a","i","c","charAt","fromCharCode","indexOf","decodeURIComponent","charCodeAt","toString","toUpperCase","header","parse","split","_useContext","AuthContext","login","isLoggedIn","isReseting","setIsReseting","_useState9","_useState10","isReconfirmation","setIsReconfirmation","loginHandler","preventDefault","loginEmailInput","password","loginPasswordInput","userId","localStorage","setItem","token","role","signupHandler","_ref2","_callee2","_context2","signupUsername","signupEmail","signupPassword","_x2","GoogleSignupHandler","_ref3","_callee3","userObject","_context3","image","picture","_x3","GoogleLoginHandler","_ref4","_callee4","_context4","_x4","CentralModal","PasswordReset","ReconfirmEmail","Modal","SuccessModel","ErrorModel","AuthenticationSection","container","row","fullHeight","col","py","section","pb","pt","mb","checkbox","htmlFor","onSubmit","placeholder","uil","mt2","btn","Success","disabled","mt4","GoogleLoginIcon","GoogleLogin","theme","size","onSuccess","credentialResponse","jwt_decode","credential","onError","link","mb3","pb3","UserAuthentication"],"sourceRoot":""}