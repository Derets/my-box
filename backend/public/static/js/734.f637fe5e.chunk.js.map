{"version":3,"file":"static/js/734.f637fe5e.chunk.js","mappings":"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","sources":["webpack://my-box/./src/components/ConstructorPage/OrderForm.module.css?a368","components/ConstructorPage/OrderForm.js","pages/Ordering.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"OrderForm_wrapper__j7XFz\",\"OrderForm\":\"OrderForm_OrderForm__MbhJM\",\"FormBlocks\":\"OrderForm_FormBlocks__hDzAD\",\"FormBlock\":\"OrderForm_FormBlock__-JEZn\",\"Error\":\"OrderForm_Error__3rPr0\",\"errorMessage\":\"OrderForm_errorMessage__nnPzj\",\"formSubmitButton\":\"OrderForm_formSubmitButton__7UXtL\",\"loadingInfo\":\"OrderForm_loadingInfo__PmhW9\"};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport classes from \"./OrderForm.module.css\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport Loader from \"../../UI/Loader\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { LanguageContext } from \"../../context/LanguageContext\";\r\n\r\nconst OrderForm = (props) => {\r\n  const {\r\n    register,\r\n    formState: { errors, isValid },\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n  } = useForm({ mode: \"onBlur\" });\r\n\r\n  const [userId, setUserId] = useState(\"649dab637718f5a0035da136\");\r\n\r\n  const { isLoggedIn, token } = useContext(AuthContext);\r\n  const { language } = useContext(LanguageContext);\r\n  let isEnglish = language === \"en\";\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(null);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [errorFetch, setErrorFetch] = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    setIsFetching(true);\r\n    if (isLoggedIn) {\r\n      setUserId(localStorage.getItem(\"user_id\"));\r\n      let userId = localStorage.getItem(\"user_id\");\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_API_URL}${userId}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              authorization: \"Bearer \" + token,\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Request failed\");\r\n        }\r\n        const data = await response.json();\r\n        setValue(\"name\", data.user.name);\r\n        setValue(\"email\", data.user.email);\r\n        setValue(\"number\", data.user.number);\r\n        setValue(\"city\", data.user.city);\r\n        setValue(\"post\", data.user.post);\r\n        setIsFetching(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setErrorFetch(\r\n          error.message || \"Something went wrong, please try again  \"\r\n        );\r\n        setIsFetching(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const makeOrder = async (data) => {\r\n    const request = {\r\n      typeOfBox: props.boxType || \"CubeBox\",\r\n      size: { length: props.length, width: props.width, height: props.height },\r\n      colors: {\r\n        colorOne: props.colorOne,\r\n        colorTwo: props.colorTwo,\r\n        colorThree: props.colorThree,\r\n      },\r\n      address: {\r\n        email: data.email,\r\n        telNumber: data.number,\r\n        city: data.city,\r\n        postDepartment: data.post,\r\n      },\r\n      creator: userId,\r\n      amount: props.amount,\r\n      price: props.price,\r\n      comment: data.comment,\r\n    };\r\n    try {\r\n      setIsLoading(true);\r\n      setIsSuccess(null);\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}ordering`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(request),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed\");\r\n      }\r\n      const responseData = await response.json();\r\n      reset();\r\n      setIsLoading(false);\r\n      setIsSuccess(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message || \"Something went wrong, please try again  \");\r\n      setIsLoading(false);\r\n      setIsSuccess(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(makeOrder)} className={classes.OrderForm}>\r\n        <div className={classes.wrapper}>\r\n          {isFetching && isLoggedIn && (\r\n            <>\r\n              <Loader />\r\n              <div className={classes.loadingInfo}>\r\n                {isEnglish\r\n                  ? \"Loading data from your profile...\"\r\n                  : \"Завантаження інформації з вашого профілю...\"}\r\n              </div>\r\n            </>\r\n          )}\r\n          {!isFetching && !errorFetch && isLoggedIn && (\r\n            <div className={classes.loadingInfo}>\r\n              {isEnglish\r\n                ? \"Data from your profile was fetched successfully\"\r\n                : \"Дані з вашого профілю були завантажені успішно\"}\r\n            </div>\r\n          )}\r\n          {!isFetching && errorFetch && isLoggedIn && (\r\n            <div className={classes.loadingInfo}>\r\n              {isEnglish\r\n                ? `The autofill information from your profile was not loaded (Reason: ${errorFetch})`\r\n                : `Інформація для автозаповнення з вашого профілю не була завантажена (Причина: ${errorFetch})`}\r\n            </div>\r\n          )}\r\n          <div className={classes.FormBlocks}>\r\n            <div className={classes.FormBlock}>\r\n              <h2>Contact Information</h2>\r\n              <label className={`${errors?.name ? classes.Error : null}`}>\r\n                {isEnglish ? \"Name\" : \"Ім`я\"}\r\n                <br />\r\n                <input\r\n                  placeholder={\r\n                    isEnglish ? \"Enter you name\" : \"Введіть ваше ім`я\"\r\n                  }\r\n                  type=\"text\"\r\n                  {...register(\"name\", {\r\n                    required: `${\r\n                      isEnglish\r\n                        ? \"This field must not be empty!\"\r\n                        : \"Це поле не повинно бути порожнім!\"\r\n                    }`,\r\n                    minLength: {\r\n                      value: 1,\r\n                    },\r\n                  })}\r\n                />\r\n                <div className={classes.errorMessage}>\r\n                  {errors?.name && (\r\n                    <p>\r\n                      {errors?.name?.message ||\r\n                        `${isEnglish ? \"Error\" : \"Помилка\"}`}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </label>\r\n\r\n              <label className={`${errors?.email ? classes.Error : null}`}>\r\n                Email\r\n                <br />\r\n                <input\r\n                  placeholder={isEnglish ? \"Enter email\" : \"Введіть email\"}\r\n                  type=\"email\"\r\n                  {...register(\"email\", {\r\n                    required: `${\r\n                      isEnglish\r\n                        ? \"Enter valid email!\"\r\n                        : \"Введіть коректний email!\"\r\n                    }`,\r\n                    pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n                  })}\r\n                />\r\n                <div className={classes.errorMessage}>\r\n                  {errors?.email && (\r\n                    <p>\r\n                      {errors?.email?.message ||\r\n                        `${isEnglish ? \"Error\" : \"Помилка\"}`}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </label>\r\n\r\n              <label className={`${errors?.number ? classes.Error : null}`}>\r\n                {isEnglish ? \"Number\" : \"Номер\"}\r\n                <br />\r\n                <input\r\n                  placeholder={\r\n                    isEnglish ? \"Enter phone number\" : \"Введіть номер телефону\"\r\n                  }\r\n                  type=\"text\"\r\n                  {...register(\"number\", {\r\n                    required: `${\r\n                      isEnglish\r\n                        ? \"Enter valid phone number!\"\r\n                        : \"Введіть коректний номер телефону!\"\r\n                    }`,\r\n                    pattern: /^\\+(?:[0-9] ?){6,14}[0-9]$/,\r\n                  })}\r\n                />\r\n                <div className={classes.errorMessage}>\r\n                  {errors?.number && (\r\n                    <p>\r\n                      {errors?.number?.message ||\r\n                        `${isEnglish ? \"Error\" : \"Помилка\"}`}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </label>\r\n            </div>\r\n            <div className={classes.FormBlock}>\r\n              <h2>{isEnglish ? \"Postal Details\" : \"Поштові дані\"}</h2>\r\n              <label className={`${errors?.post ? classes.Error : null}`}>\r\n                {isEnglish ? \"Post Department\" : \"Поштове віділення\"}\r\n                <br />\r\n                <input\r\n                  placeholder={\r\n                    isEnglish\r\n                      ? \"Enter your post department\"\r\n                      : \"Введіть поштове віділення\"\r\n                  }\r\n                  type=\"text\"\r\n                  {...register(\"post\", {\r\n                    required: `${\r\n                      isEnglish\r\n                        ? \"This field must not be empty!\"\r\n                        : \"Це поле не повинно бути порожнім!\"\r\n                    }`,\r\n                    minLength: {\r\n                      value: 1,\r\n                    },\r\n                  })}\r\n                />\r\n                <div className={classes.errorMessage}>\r\n                  {errors?.post && (\r\n                    <p>\r\n                      {errors?.post?.message ||\r\n                        `${isEnglish ? \"Error\" : \"Помилка\"}`}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </label>\r\n\r\n              <label className={`${errors?.city ? classes.Error : null}`}>\r\n                {isEnglish ? \"City Name\" : \"Назва міста\"}\r\n                <br />\r\n                <input\r\n                  placeholder={\r\n                    isEnglish\r\n                      ? \"Enter name of your city\"\r\n                      : \"Введіть назву міста\"\r\n                  }\r\n                  type=\"text\"\r\n                  {...register(\"city\", {\r\n                    required: `${\r\n                      isEnglish\r\n                        ? \"This field must not be empty!\"\r\n                        : \"Це поле не повинно бути порожнім!\"\r\n                    }`,\r\n                    minLength: {\r\n                      value: 1,\r\n                    },\r\n                  })}\r\n                />\r\n                <div className={classes.errorMessage}>\r\n                  {errors?.city && (\r\n                    <p>\r\n                      {errors?.city?.message ||\r\n                        `${isEnglish ? \"Error\" : \"Помилка\"}`}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </label>\r\n            </div>\r\n            <div className={classes.FormBlock}>\r\n              <h2>{isEnglish ? \"Comment\" : \"Коментарій\"}</h2>\r\n              <label>\r\n                <br />\r\n                <textarea\r\n                  placeholder={\r\n                    isEnglish ? \"Write your comment\" : \"Напишіть ваш коментарій\"\r\n                  }\r\n                  type=\"text\"\r\n                  {...register(\"comment\")}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className={classes.formSubmitButton}>\r\n              <button type=\"submit\" disabled={!isValid}>\r\n                {isEnglish ? \"Create Order\" : \"Замовити\"}\r\n              </button>\r\n            </div>\r\n            {isLoading && <Loader light />}\r\n            {isLoading && (\r\n              <div className={classes.loadingInfo}>\r\n                {isEnglish ? `Creating Order...` : `Створення замовлення...`}\r\n              </div>\r\n            )}\r\n            {!isLoading && error && (\r\n              <div className={classes.loadingInfo}>\r\n                {isEnglish\r\n                  ? `The order was not created (Reason: ${error})`\r\n                  : `Замовлення не було створено (Причина: ${error})`}\r\n              </div>\r\n            )}\r\n            {!isLoading && !error && isSuccess && (\r\n              <div className={classes.loadingInfo}>\r\n                {isEnglish\r\n                  ? `The order was created successfully`\r\n                  : `Замовлення було створено успішно`}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n","import React from \"react\";\r\nimport OrderForm from \"../components/ConstructorPage/OrderForm\";\r\nimport OrderedBox from \"../components/User/OrderedBox\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Ordering = () => {\r\n  const location = useLocation();\r\n  const dataObject = location?.state;\r\n\r\n  return (\r\n    <>\r\n      <OrderedBox order={dataObject} isOrdering />\r\n      <OrderForm\r\n        colorOne={dataObject?.colorOne}\r\n        colorTwo={dataObject?.colorTwo}\r\n        colorThree={dataObject?.colorThree}\r\n        width={dataObject?.width}\r\n        height={dataObject?.height}\r\n        length={dataObject?.length}\r\n        boxType={dataObject?.boxType}\r\n        amount={dataObject?.amount}\r\n        price={dataObject?.price}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ordering;\r\n"],"names":["props","_errors$name","_errors$email","_errors$number","_errors$post","_errors$city","_useForm","useForm","mode","register","_useForm$formState","formState","errors","isValid","handleSubmit","reset","setValue","_useState","useState","_useState2","_slicedToArray","userId","setUserId","_useContext","useContext","AuthContext","isLoggedIn","token","isEnglish","LanguageContext","language","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","isSuccess","setIsSuccess","_useState9","_useState10","isFetching","setIsFetching","_useState11","_useState12","errorFetch","setErrorFetch","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_userId","response","data","wrap","_context","prev","next","localStorage","getItem","fetch","concat","process","method","headers","authorization","sent","ok","Error","json","user","name","email","number","city","post","t0","console","message","stop","apply","arguments","useEffect","makeOrder","_ref2","_callee2","request","_context2","typeOfBox","boxType","size","length","width","height","colors","colorOne","colorTwo","colorThree","address","telNumber","postDepartment","creator","amount","price","comment","body","JSON","stringify","_x","_jsx","_Fragment","children","onSubmit","className","classes","_jsxs","Loader","_objectSpread","placeholder","type","required","minLength","value","pattern","disabled","light","location","useLocation","dataObject","state","OrderedBox","order","isOrdering","OrderForm"],"sourceRoot":""}